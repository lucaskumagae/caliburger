CREATE DATABASE db_caliburger;
USE db_caliburger;
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";

CREATE TABLE balconista_dono (
  cpf char(11) NOT NULL,
  nome varchar(100) NOT NULL,
  data_nasc date NOT NULL,
  email varchar(255) NOT NULL,
  sexo varchar(50) NOT NULL,
  senha varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


INSERT INTO balconista_dono (cpf, nome, data_nasc, email, sexo, senha) VALUES
('35265811001', 'admin', '1985-01-01', 'admin@caliburger.com', 'Masculino', '123'),
('54349918000', 'teste', '1995-05-05', 'teste@caliburger.com', 'Feminino', '123');

CREATE TABLE categoria (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE cardapio (
  id int(11) NOT NULL,
  nome varchar(100) NOT NULL,
  descricao varchar(255) DEFAULT NULL,
  preco decimal(10,2) DEFAULT NULL,
  categoria_id INT,
  FOREIGN KEY (categoria_id) REFERENCES categoria(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

INSERT INTO cardapio (id, nome, descricao, preco) VALUES
(1, 'Cali Clássico', 'Hambúrguer com queijo cheddar, alface e tomate', 22.00),
(2, 'Cali Duplo', 'Dois hambúrgueres 180g, cheddar duplo, pão brioche', 28.00),
(3, 'X-Burger', 'Saboroso hambúrger com queijo carne e molho especial', 20.00),
(4, 'Suco de uva', 'Copo de suco de uva', 8.00),
(5, 'Refrigerante', 'Copo de refrigerante', 8.00),
(6, 'Água', 'Copo de agua', 5.00),
(7, 'Cali fritas', 'Batata frita 180g', 15.00),
(8, 'Cali nuggets', '10 nuggets', 12.00);

CREATE TABLE cardapio_ingrediente (
  id_cardapio int(11) NOT NULL,
  id_ingrediente int(11) NOT NULL,
  quantidade_utilizada int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

INSERT INTO cardapio_ingrediente (id_cardapio, id_ingrediente, quantidade_utilizada) VALUES
(1, 1, 1),
(1, 2, 1),
(1, 3, 1),
(1, 4, 1),
(1, 5, 1),
(2, 1, 1),
(2, 2, 2),
(2, 3, 2);



INSERT INTO categoria (nome) VALUES ('Lanches'), ('Acompanhamentos'), ('Bebidas');

CREATE TABLE cliente (
  id int(11) NOT NULL,
  login varchar(30) NOT NULL,
  senha varchar(255) NOT NULL,
  nome varchar(100) NOT NULL,
  email varchar(255) NOT NULL,
  cpf char(11) DEFAULT NULL,
  data_nasc date NOT NULL,
  end_estado varchar(255) NOT NULL,
  end_cidade varchar(255) NOT NULL,
  end_bairro varchar(255) NOT NULL,
  end_logradouro varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

INSERT INTO cliente (id, login, senha, nome, email, cpf, data_nasc, end_estado, end_cidade, end_bairro, end_logradouro) VALUES
(1, 'joao', '123', 'João', 'joao@email.com', '28962080036', '1990-01-01', 'SP', 'São Paulo', 'Centro', 'Rua Teste, 123'),
(5, 'maria', '123', 'Maria', 'maria@email.com', '10106081004', '1995-02-02', 'PR', 'Curitiba', 'Centro', 'Rua teste 321');

CREATE TABLE cozinheiro (
  cpf CHAR(11) NOT NULL,
  nome VARCHAR(50) NOT NULL,
  data_nasc DATE NOT NULL,
  sexo VARCHAR(50) NOT NULL,
  email VARCHAR(255) DEFAULT NULL,
  senha VARCHAR(255) NOT NULL,
  PRIMARY KEY (cpf)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

INSERT INTO cozinheiro (cpf, nome, data_nasc, sexo, email, senha) VALUES
('21199625027', 'Carlos Souza', '1990-05-10', 'Masculino', 'carlos@email.com', '123'),
('41368460020', 'Ana Lima', '1985-08-22', 'Feminino', 'ana@email.com', '123'),
('63600295020', 'Marcos Oliveira', '1992-12-15', 'Masculino', 'marcos@email.com', '123'),
('03936667004', 'Juliana Alves', '1988-03-30', 'Feminino', 'juliana@email.com', '123');


CREATE TABLE estoque (
  id_ingrediente int(11) NOT NULL,
  nome_ingrediente varchar(50) NOT NULL,
  quantidade int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

INSERT INTO estoque (id_ingrediente, nome_ingrediente, quantidade) VALUES
(1, 'Pão Brioche', 100),
(2, 'Hambúrguer 180g', 50),
(3, 'Queijo Cheddar', 80),
(4, 'Alface', 60),
(5, 'Tomate', 60),
(6, 'Suco de uva', 100),
(7, 'Refrigerante', 100),
(8, 'Agua', 100),
(9, 'Batata frita', 100),
(10,'Nugget de frango', 100);

CREATE TABLE pagamento (
  id_pagamento int(11) NOT NULL,
  data_hora datetime NOT NULL,
  forma_de_pagamento varchar(20) NOT NULL,
  valor decimal(10,2) NOT NULL,
  numero_do_pedido int(11) NOT NULL,
  id_cliente int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE pedido (
  numero_do_pedido int(11) NOT NULL auto_increment,
  produto varchar(50) NOT NULL,	
  valor decimal(10,2) NOT NULL,
  nome_cliente varchar(100) NOT NULL,
  aceito tinyint(1) NOT NULL DEFAULT 0,
  observacao varchar(255) DEFAULT NULL,
  data_pedido datetime DEFAULT current_timestamp(),
  PRIMARY KEY (numero_do_pedido)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE itens_pedido (
  id int(11) NOT NULL AUTO_INCREMENT,
  numero_do_pedido int(11) NOT NULL,
  produto varchar(50) NOT NULL,
  quantidade int(11) NOT NULL,
  valor decimal(10,2) NOT NULL,
  observacao varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (numero_do_pedido) REFERENCES pedido(numero_do_pedido)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

DELETE FROM pedido WHERE numero_do_pedido > 2;

CREATE TABLE pedido_estoque (
  numero_do_pedido int(11) NOT NULL,
  id_ingrediente int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

ALTER TABLE balconista_dono
  ADD PRIMARY KEY (cpf);

ALTER TABLE cardapio
  ADD PRIMARY KEY (id);

ALTER TABLE cardapio_ingrediente
  ADD PRIMARY KEY (id_cardapio,id_ingrediente),
  ADD KEY id_ingrediente (id_ingrediente);

ALTER TABLE cliente
  ADD PRIMARY KEY (id),
  ADD UNIQUE KEY cpf (cpf);


ALTER TABLE estoque
  ADD PRIMARY KEY (id_ingrediente),
  ADD UNIQUE KEY nome_ingrediente (nome_ingrediente);

ALTER TABLE pagamento
  ADD PRIMARY KEY (id_pagamento),
  ADD KEY numero_do_pedido (numero_do_pedido),
  ADD KEY id_cliente (id_cliente);

  
ALTER TABLE pedido_estoque
  ADD PRIMARY KEY (numero_do_pedido,id_ingrediente),
  ADD KEY id_ingrediente (id_ingrediente);

ALTER TABLE cardapio
  MODIFY id int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

ALTER TABLE cliente
  MODIFY id int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

ALTER TABLE estoque
  MODIFY id_ingrediente int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

ALTER TABLE pagamento
  MODIFY id_pagamento int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE pedido
  MODIFY numero_do_pedido int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

ALTER TABLE cardapio_ingrediente
  ADD CONSTRAINT cardapio_ingrediente_ibfk_1 FOREIGN KEY (id_cardapio) REFERENCES cardapio (id),
  ADD CONSTRAINT cardapio_ingrediente_ibfk_2 FOREIGN KEY (id_ingrediente) REFERENCES estoque (id_ingrediente);

ALTER TABLE pagamento
  ADD CONSTRAINT pagamento_ibfk_1 FOREIGN KEY (numero_do_pedido) REFERENCES pedido (numero_do_pedido),
  ADD CONSTRAINT pagamento_ibfk_2 FOREIGN KEY (id_cliente) REFERENCES cliente (id);

ALTER TABLE pedido_estoque
  ADD CONSTRAINT pedido_estoque_ibfk_1 FOREIGN KEY (numero_do_pedido) REFERENCES pedido (numero_do_pedido),
  ADD CONSTRAINT pedido_estoque_ibfk_2 FOREIGN KEY (id_ingrediente) REFERENCES estoque (id_ingrediente);
COMMIT;

SELECT 
    c.id,
    c.nome,
    GROUP_CONCAT(e.nome_ingrediente ORDER BY e.nome_ingrediente SEPARATOR ', ') AS nova_descricao
FROM cardapio c
JOIN cardapio_ingrediente ci ON c.id = ci.id_cardapio
JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
GROUP BY c.id, c.nome;

UPDATE cardapio c
JOIN (
    SELECT 
        ci.id_cardapio,
        GROUP_CONCAT(e.nome_ingrediente ORDER BY e.nome_ingrediente SEPARATOR ', ') AS nova_descricao
    FROM cardapio_ingrediente ci
    JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
    GROUP BY ci.id_cardapio
) AS ingredientes ON c.id = ingredientes.id_cardapio
SET c.descricao = ingredientes.nova_descricao;

SELECT * FROM cardapio;

SELECT 
    ci.id_cardapio,
    GROUP_CONCAT(e.nome_ingrediente ORDER BY e.nome_ingrediente SEPARATOR ', ') AS nova_descricao
FROM cardapio_ingrediente ci
JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
GROUP BY ci.id_cardapio;

SELECT 
    c.nome,
    GROUP_CONCAT(e.nome_ingrediente ORDER BY e.nome_ingrediente SEPARATOR ', ') AS ingredientes
FROM cardapio c
JOIN cardapio_ingrediente ci ON c.id = ci.id_cardapio
JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
GROUP BY c.id, c.nome;

ALTER TABLE cardapio ADD disponivel TINYINT(1) DEFAULT 1;

UPDATE cardapio c
SET disponivel = 0
WHERE EXISTS (
    SELECT 1
    FROM cardapio_ingrediente ci
    JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
    WHERE ci.id_cardapio = c.id
      AND e.quantidade <= 0
);

UPDATE cardapio c
SET disponivel = 1
WHERE NOT EXISTS (
    SELECT 1
    FROM cardapio_ingrediente ci
    JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
    WHERE ci.id_cardapio = c.id
      AND e.quantidade <= 0
);

SELECT 
    c.id,
    c.nome,
    c.preco,
    GROUP_CONCAT(e.nome_ingrediente ORDER BY e.nome_ingrediente SEPARATOR ', ') AS descricao
FROM cardapio c
JOIN cardapio_ingrediente ci ON c.id = ci.id_cardapio
JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
WHERE c.disponivel = 1 AND e.quantidade > 0
GROUP BY c.id, c.nome, c.preco;

INSERT INTO cardapio_ingrediente (id_cardapio, id_ingrediente, quantidade_utilizada)
VALUES
(3, 1, 1),  
(3, 2, 1), 
(3, 3, 1),
(4, 6, 1),
(5, 7, 1),
(6, 8, 1),
(7, 9, 1),
(8, 10, 10);
   

UPDATE cardapio c
JOIN (
    SELECT 
        ci.id_cardapio,
        GROUP_CONCAT(e.nome_ingrediente ORDER BY e.nome_ingrediente SEPARATOR ', ') AS nova_descricao
    FROM cardapio_ingrediente ci
    JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
    GROUP BY ci.id_cardapio
) AS ingredientes ON c.id = ingredientes.id_cardapio
SET c.descricao = ingredientes.nova_descricao
WHERE c.id = 3;

UPDATE cardapio c
SET disponivel = 0
WHERE EXISTS (
    SELECT 1
    FROM cardapio_ingrediente ci
    JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
    WHERE ci.id_cardapio = c.id
      AND e.quantidade <= 0
);

UPDATE cardapio c
SET disponivel = 1
WHERE NOT EXISTS (
    SELECT 1
    FROM cardapio_ingrediente ci
    JOIN estoque e ON ci.id_ingrediente = e.id_ingrediente
    WHERE ci.id_cardapio = c.id
      AND e.quantidade <= 0
);

ALTER TABLE cardapio ADD COLUMN imagem VARCHAR(255);

UPDATE cardapio
SET imagem = 'cali_classico.png'
WHERE id = 1;

UPDATE cardapio
SET imagem = 'cali_duplo.png'
WHERE id = 2;

UPDATE cardapio
SET imagem = 'x_burger.png'
WHERE id = 3;

UPDATE cardapio
SET imagem = 'suco_uva.png'
WHERE id = 4;

UPDATE cardapio
SET imagem = 'refrigerante.png'
WHERE id = 5;

UPDATE cardapio
SET imagem = 'agua.png'
WHERE id = 6;

UPDATE cardapio
SET imagem = 'cali_fritas.png'
WHERE id = 7;

UPDATE cardapio
SET imagem = 'cali_nugget.png'
WHERE id = 8;

UPDATE cardapio
SET categoria_id = 1
WHERE id = 1;

UPDATE cardapio
SET categoria_id = 1
WHERE id = 2;

UPDATE cardapio
SET categoria_id = 1
WHERE id = 3;

UPDATE cardapio
SET categoria_id = 3
WHERE id = 4;

UPDATE cardapio
SET categoria_id = 3
WHERE id = 5;

UPDATE cardapio
SET categoria_id = 3
WHERE id = 6;

UPDATE cardapio
SET categoria_id = 2
WHERE id = 7;

UPDATE cardapio
SET categoria_id = 2
WHERE id = 8;


ALTER TABLE pedido ADD COLUMN status VARCHAR(50) DEFAULT 'Concluído';

INSERT INTO pedido (numero_do_pedido, valor, nome_cliente, aceito, status, data_pedido)
VALUES (1, 22.00, 'Cliente Teste 1', 0, 'Aguardando aceitação', NOW());

INSERT INTO itens_pedido (numero_do_pedido, produto, quantidade, observacao)
VALUES 
  ((SELECT numero_do_pedido FROM pedido WHERE nome_cliente = 'Cliente Teste 1' ORDER BY data_pedido DESC LIMIT 1), 'Cali Classico', 1, '');

INSERT INTO pedido (numero_do_pedido, valor, nome_cliente, aceito, status, data_pedido)
VALUES (2, 48.00, 'Cliente Teste 2', 0, 'Aguardando aceitação', NOW());

INSERT INTO itens_pedido (numero_do_pedido, produto, quantidade, observacao)
VALUES 
  ((SELECT numero_do_pedido FROM pedido WHERE nome_cliente = 'Cliente Teste 2' ORDER BY data_pedido DESC LIMIT 1), 'Cali Duplo', 1, ''),
  ((SELECT numero_do_pedido FROM pedido WHERE nome_cliente = 'Cliente Teste 2' ORDER BY data_pedido DESC LIMIT 1), 'X Burger', 1, '');
